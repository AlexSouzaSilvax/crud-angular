{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Projetos\\\\vscode\\\\crud-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorDialogComponent } from 'src/app/shared/components/error-dialog/error-dialog.component';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\nlet CoursesComponent = class CoursesComponent {\n  constructor(coursesService, dialog, router, route, service, snackbar, location) {\n    this.coursesService = coursesService;\n    this.dialog = dialog;\n    this.router = router;\n    this.route = route;\n    this.service = service;\n    this.snackbar = snackbar;\n    this.location = location;\n    this.displayedColumns = ['_id', 'name', 'category', 'actions'];\n    this.onCourses();\n  }\n\n  onCourses() {\n    this.courses$ = this.coursesService.list().pipe(catchError(error => {\n      this.onError('Erro ao carregar cursos');\n      return of([]);\n    }));\n  }\n\n  onError(errorMsg) {\n    this.dialog.open(ErrorDialogComponent, {\n      data: errorMsg\n    });\n  } //criar um shared\n\n\n  onCancel() {\n    this.location.back();\n  }\n\n  onSuccess(actionMessage) {\n    this.snackbar.open(actionMessage, '', {\n      duration: 5000\n    });\n    this.onCourses();\n  }\n\n  ngOnInit() {}\n\n  onAdd() {\n    this.router.navigate(['new'], {\n      relativeTo: this.route\n    });\n  }\n\n  onEdit(pCourse) {\n    this.router.navigate(['new', {\n      course: JSON.stringify(pCourse)\n    }], {\n      relativeTo: this.route\n    });\n  }\n\n  onClickDelete(_id) {\n    var _this = this;\n\n    this.openDialog('Deseja realmente apagar ?', 'Esta ação não poderá ser revertida', /*#__PURE__*/_asyncToGenerator(function* () {\n      return _this.onDelete(_id);\n    }));\n  }\n\n  onDelete(id) {\n    this.service.delete(id).subscribe(result => this.onSuccess('delete success'), error => this.onError('delete error'));\n  }\n\n  openDialog(pTitle, pDescription, pOnConfirm) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        title: pTitle,\n        description: pDescription,\n        onConfirm: pOnConfirm\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {//console.log('The dialog was closed');\n    });\n  }\n\n};\nCoursesComponent = __decorate([Component({\n  selector: 'app-courses',\n  templateUrl: './courses.component.html',\n  styleUrls: ['./courses.component.scss']\n})], CoursesComponent);\nexport { CoursesComponent };","map":{"version":3,"sources":["C:/Projetos/vscode/crud-angular/src/app/courses/courses/courses.component.ts"],"names":["__decorate","Component","of","catchError","ErrorDialogComponent","ConfirmDialogComponent","CoursesComponent","constructor","coursesService","dialog","router","route","service","snackbar","location","displayedColumns","onCourses","courses$","list","pipe","error","onError","errorMsg","open","data","onCancel","back","onSuccess","actionMessage","duration","ngOnInit","onAdd","navigate","relativeTo","onEdit","pCourse","course","JSON","stringify","onClickDelete","_id","openDialog","onDelete","id","delete","subscribe","result","pTitle","pDescription","pOnConfirm","dialogRef","title","description","onConfirm","afterClosed","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ErrorDialogComponent } from 'src/app/shared/components/error-dialog/error-dialog.component';\r\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\r\nlet CoursesComponent = class CoursesComponent {\r\n    constructor(coursesService, dialog, router, route, service, snackbar, location) {\r\n        this.coursesService = coursesService;\r\n        this.dialog = dialog;\r\n        this.router = router;\r\n        this.route = route;\r\n        this.service = service;\r\n        this.snackbar = snackbar;\r\n        this.location = location;\r\n        this.displayedColumns = ['_id', 'name', 'category', 'actions'];\r\n        this.onCourses();\r\n    }\r\n    onCourses() {\r\n        this.courses$ = this.coursesService.list().pipe(catchError((error) => {\r\n            this.onError('Erro ao carregar cursos');\r\n            return of([]);\r\n        }));\r\n    }\r\n    onError(errorMsg) {\r\n        this.dialog.open(ErrorDialogComponent, {\r\n            data: errorMsg,\r\n        });\r\n    }\r\n    //criar um shared\r\n    onCancel() {\r\n        this.location.back();\r\n    }\r\n    onSuccess(actionMessage) {\r\n        this.snackbar.open(actionMessage, '', {\r\n            duration: 5000,\r\n        });\r\n        this.onCourses();\r\n    }\r\n    ngOnInit() { }\r\n    onAdd() {\r\n        this.router.navigate(['new'], { relativeTo: this.route });\r\n    }\r\n    onEdit(pCourse) {\r\n        this.router.navigate(['new', { course: JSON.stringify(pCourse) }], {\r\n            relativeTo: this.route,\r\n        });\r\n    }\r\n    onClickDelete(_id) {\r\n        this.openDialog('Deseja realmente apagar ?', 'Esta ação não poderá ser revertida', async () => this.onDelete(_id));\r\n    }\r\n    onDelete(id) {\r\n        this.service.delete(id).subscribe((result) => this.onSuccess('delete success'), (error) => this.onError('delete error'));\r\n    }\r\n    openDialog(pTitle, pDescription, pOnConfirm) {\r\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n            data: {\r\n                title: pTitle,\r\n                description: pDescription,\r\n                onConfirm: pOnConfirm,\r\n            },\r\n        });\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            //console.log('The dialog was closed');\r\n        });\r\n    }\r\n};\r\nCoursesComponent = __decorate([\r\n    Component({\r\n        selector: 'app-courses',\r\n        templateUrl: './courses.component.html',\r\n        styleUrls: ['./courses.component.scss'],\r\n    })\r\n], CoursesComponent);\r\nexport { CoursesComponent };\r\n"]},"metadata":{},"sourceType":"module"}